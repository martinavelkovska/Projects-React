{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martina.velkovska\\\\Downloads\\\\ClassComponent\\\\01-starting-project\\\\src\\\\components\\\\Users.js\";\nimport User from './User';\nimport classes from './Users.module.css';\nimport { Component } from 'react';\n\n// const DUMMY_USERS = [\n//   { id: 'u1', name: 'Max' },\n//   { id: 'u2', name: 'Manuel' },\n//   { id: 'u3', name: 'Julie' },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  // to define state i should use a constructor,\n  // in the constructor i can do initializing state\n\n  constructor() {\n    super(); // mora da go povikame konstuktorot od super classata: Component\n    this.state = {\n      // imam samo eden state object sto gi grupira site states\n      showUsers: true,\n      moreState: 'Test' // ovoj second state piece nema da bide lost\n      //moze da imam i nestedObject nested:{}\n      //eraseState data: []\n    }; // vo klasno bazirana komponenta, state e objekt\n  }\n  toggleUsersHandler() {\n    //  this.state.showUsers = false; //NOT correct\n    this.setState(curState => {\n      // za UPDATE NA STATE\n      return {\n        showUsers: !curState.showUsers\n      };\n    }); // specijalen metod koj e provided od Component  , sekogas prima objekt - koj sto sodrzi nov state koj sto sakame da go stavime no nema da go override stariot state\n    //react kej go mergne objektot sto ovde se prakja so vekje postoeckiot state\n    //moze da koristeme state updating function\n    //mora d vrateme objekt\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler.bind(this),\n        children: [this.state.showUsers ? 'Hide' : 'Show', \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), this.state.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["User","classes","Component","jsxDEV","_jsxDEV","Users","constructor","state","showUsers","moreState","toggleUsersHandler","setState","curState","render","usersList","children","props","users","map","user","name","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","bind"],"sources":["C:/Users/martina.velkovska/Downloads/ClassComponent/01-starting-project/src/components/Users.js"],"sourcesContent":["\nimport User from './User';\n\nimport classes from './Users.module.css';\nimport { Component } from 'react';\n\n\n\n// const DUMMY_USERS = [\n//   { id: 'u1', name: 'Max' },\n//   { id: 'u2', name: 'Manuel' },\n//   { id: 'u3', name: 'Julie' },\n// ];\n\nclass Users extends Component {\n// to define state i should use a constructor,\n// in the constructor i can do initializing state\n\n\nconstructor () {\n  super(); // mora da go povikame konstuktorot od super classata: Component\n  this.state = { // imam samo eden state object sto gi grupira site states\n    showUsers: true,\n    moreState: 'Test' // ovoj second state piece nema da bide lost\n    //moze da imam i nestedObject nested:{}\n    //eraseState data: []\n\n  }; // vo klasno bazirana komponenta, state e objekt\n}\ntoggleUsersHandler () {\n//  this.state.showUsers = false; //NOT correct\n this.setState((curState) => { // za UPDATE NA STATE\n  return {showUsers: !curState.showUsers};\n }); // specijalen metod koj e provided od Component  , sekogas prima objekt - koj sto sodrzi nov state koj sto sakame da go stavime no nema da go override stariot state\n //react kej go mergne objektot sto ovde se prakja so vekje postoeckiot state\n//moze da koristeme state updating function\n//mora d vrateme objekt\n}\n\n  render(){\n\n    \n  const usersList = (\n    <ul>\n      {this.props.users.map((user) => (\n        <User key={user.id} name={user.name} />\n      ))}\n    </ul>\n  );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? 'Hide' : 'Show'} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n\n  }\n}\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AACA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,SAAS,QAAQ,OAAO;;AAIjC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,KAAK,SAASH,SAAS,CAAC;EAC9B;EACA;;EAGAI,WAAWA,CAAA,EAAI;IACb,KAAK,CAAC,CAAC,CAAC,CAAC;IACT,IAAI,CAACC,KAAK,GAAG;MAAE;MACbC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,MAAM,CAAC;MAClB;MACA;IAEF,CAAC,CAAC,CAAC;EACL;EACAC,kBAAkBA,CAAA,EAAI;IACtB;IACC,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;MAAE;MAC7B,OAAO;QAACJ,SAAS,EAAE,CAACI,QAAQ,CAACJ;MAAS,CAAC;IACxC,CAAC,CAAC,CAAC,CAAC;IACJ;IACD;IACA;EACA;EAEEK,MAAMA,CAAA,EAAE;IAGR,MAAMC,SAAS,gBACbV,OAAA;MAAAW,QAAA,EACG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACzBf,OAAA,CAACJ,IAAI;QAAeoB,IAAI,EAAED,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;IAEC,oBACErB,OAAA;MAAKsB,SAAS,EAAEzB,OAAO,CAACgB,KAAM;MAAAF,QAAA,gBAC5BX,OAAA;QAAQuB,OAAO,EAAE,IAAI,CAACjB,kBAAkB,CAACkB,IAAI,CAAC,IAAI,CAAE;QAAAb,QAAA,GACjD,IAAI,CAACR,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACR,IAAI,CAAClB,KAAK,CAACC,SAAS,IAAIM,SAAS;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAGV;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}